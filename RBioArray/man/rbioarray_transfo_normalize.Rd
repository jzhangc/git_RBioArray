% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/arrayDEA.R
\name{rbioarray_transfo_normalize}
\alias{rbioarray_transfo_normalize}
\alias{rbioarray_transfo_normalize.rbioarray_rlist}
\alias{rbioarray_transfo_normalize.default}
\title{rbioarray_transfo_normalize}
\usage{
rbioarray_transfo_normalize(object, ...)

\method{rbioarray_transfo_normalize}{rbioarray_rlist}(object, design, ..., verbose = TRUE)

\method{rbioarray_transfo_normalize}{default}(
  E,
  E.background = NULL,
  bgc.method = c("auto", "none", "subtract", "half", "minimum", "movingmin", "edwards",
    "normexp"),
  between.sample.norm.method = c("quantile", "Aquantile"),
  between.sample.weight.design = NULL,
  ...,
  verbose = TRUE
)
}
\arguments{
\item{object}{Input obejct with raw data and annotation information. Could be \code{rbioarray_rlist}, \code{Elist} or \code{MAList} classes.}

\item{...}{Additional arguments the default method \code{backgroundCorrect.matrix} function from \code{limma} package.}

\item{design}{Microarray experiment sample design matrix. Make sure the design colnames are the same as the levles of \code{object$sample_groups}.}

\item{verbose}{Wether to display messages. Default is \code{TRUE}. This will not affect error or warning messeages.}

\item{E}{Input raw expression value matrix with columns for samples, rows for genes/probes/genomic features.}

\item{E.background}{A opttional matrix containing background signals. The dimesnion should be the same as the input expression data without annotation columns.}

\item{bgc.method}{Background correction method. Default is \code{"auto"}. See \code{backgroundCorrect()} function from \code{limma} package for details.}

\item{between.sample.norm.method}{Normalization method. Default is \code{"quantile"}. See \code{normalizeBetweenArrays()} function from \code{limma} package for details.}

\item{between.sample.weight.design}{Microarray experiment sample design matrix for beteween sample weight calculation.}
}
\value{
A \code{rbioarray_plist} class object with the following items:

        \code{E}: Normalized and then log2 transformed expression matrix

        \code{design}: Microrray experiment sample design matrix

        \code{ArrayWeight}

        \code{raw_data}: A list including original E matrix and background matrix from the input \code{rbioarray_rlist}.

        Additionally, \code{rbioarray_plist} object will include additional items from the input \code{rbioarray_rlist} object.

A \code{rbioarray_plist} class object.

A list with the core items for a \code{rbioarray_plist} class.
}
\description{
Data log transformation and nomalization function for microarray.
}
\details{
The \code{rbioarray_rlist} object can be obtained from \code{\link{rbioarray_rlist}} function.

         The expression matrix will be normalized and then log2 tranformed for output.

         A note to the \code{normalizeBetweenArrays} function from \code{limma} package:
         The function normalizes data BEFORE log2 transformation when the input is \code{EListRaw} object.
         However, when input is \code{matrix}, it assumes the data has already been log2 tranformed, meaning normalization will
         be done AFTER log2 transformation.
            After comparision, these two methods will NOT produce the same results for the same expression data:
         In other words, applying \code{normalizeBetweenArrays} directly to log2 transformed E matrix is NOT the same as apply the function
         to the \code{EListRaw} that contains E.
            In fact, when using \code{"quantile"} method, applying \code{normalizeBetweenArrays} to log2 transformed E matrix is the
         same as applying \code{normalizeBetweenArrays} to the \code{EListRaw} that has object$E using \code{"cyclicloess"} method.
         Indeed, the source code of \code{normalizeBetweenArrays} suggests that's the case since log2 transformation is appled BEFORE
         \code{"cyclicloess"} normalization. However, transformation happens AFTER normalization for \code{"quantile"} and other methods.

The \code{rbioarray_rlist} object can be obtained from \code{\link{rbioarray_rlist}} function.

The \code{rbioarray_rlist} object can be obtained from \code{\link{rbioarray_rlist}} function.
         The word "gene" used in argument names and output item names is in its broader meaning of gene/probe/genomic feature.
         ADD the fact that \code{normalizeBetweenArrays} function is where \code{limma} log transforms data.
}
\examples{

\dontrun{
# for \code{rbioarray_rlist} object:
microarray_plist <- rbioarray_transfo_normalize(object = microarray_rlist, logTransfo = TRUE, logTransfo.method = "log2",
                                                logTransfo.parallelComputing = TRUE, logTransfo.cluterType = "FORK",
                                                bgc.method = "auto", between.sample.norm.method = "quantile")
}

}
