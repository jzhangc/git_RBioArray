% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/network_analysis.R
\name{rbio_network}
\alias{rbio_network}
\alias{rbio_network.rbio_tom_graph}
\alias{rbio_network.default}
\title{rbio_network}
\usage{
rbio_network(object, ...)

\method{rbio_network}{rbio_tom_graph}(object, export.name = NULL, ...)

\method{rbio_network}{default}(
  g,
  export.name = NULL,
  g_membership = NULL,
  colour_scheme = c("Accent", "Dark2", "Paired", "Pastel1", "Pastel2", "Set1", "Set2",
    "Set3"),
  initial_colour_number = 8,
  plot.community_separated = FALSE,
  plot.community_separated.commu_dist = 3,
  plot.ellipse = FALSE,
  plot.title = "Network",
  plot.margins = c(5, 5, 5, 5),
  plot.font.family = "sans",
  plot.highlight_membership = TRUE,
  plot.layout_type = c("circular", "fr", "tree", "nicely", "sphere"),
  plot.vertex.remove.zerodegree = TRUE,
  plot.vertex.size = NULL,
  plot.vertex.size.scale = c(1, 4),
  plot.vertex.topvsize.filter = 0.05,
  plot.vertex.color.highlighttopvsize = TRUE,
  plot.vertex.label.display = TRUE,
  plot.vertex.label = NULL,
  plot.vertex.label.topvsize = TRUE,
  plot.vertex.label.size = 0.5,
  plot.vertex.label.color = "black",
  plot.vertex.label.dist = 0,
  plot.vertex.label.loc = -pi/4,
  plot.edge.type = c("all", "across", "within"),
  plot.edge.filter = 0.05,
  plot.edge.filter.direction = c("top", "bottom"),
  plot.edge.weight = NULL,
  plot.edge.weight.scale = c(1, 4),
  plot.edge.arrow.mode = FALSE,
  plot.edge.curved = FALSE,
  plot.edge.color.highlighttopvsize = TRUE,
  plot.height = 7,
  plot.width = 7,
  random_state = 1,
  verbose = TRUE
)
}
\arguments{
\item{object}{An \code{rbio_tom_graph} object.}

\item{...}{Additional arguments for corresponding S3 class methods.}

\item{export.name}{string. Optional prefix for export file name. Default is \code{NULL}.}

\item{g}{Input list cantaining DE dataframes for each comparison.}

\item{g_membership}{Input dataframe containing F stats.}

\item{colour_scheme}{string. The colour set from \code{\link{RColorBrewer}} function. Default is \code{"Accent"}.}

\item{initial_colour_number}{int. The number of starting colours to use for the clusters. See details. Default is \code{8}.}

\item{plot.community_separated}{boolean. If to separate community vertices in graph. Default is \code{FALSE}.}

\item{plot.ellipse}{boolean. If to show member groups with ellipse. Default is \code{FALSE}.}

\item{plot.font.family}{string. The font family of the labels in the plot. Default is \code{"sans"}.}

\item{plot.highlight_membership}{boolean. If to highlight the membership, by making all edges transparent. Default is \code{TRUE}.}

\item{plot.layout_type}{string. Layout type, same as described in \code{igraph} pacakges.}

\item{plot.vertex.remove.zerodegree}{boolean. If to remove zero degree edges from the graph. Default is \code{TRUE}.}

\item{plot.vertex.size}{numeric vector. Vertex size.}

\item{plot.vertex.size.scale}{numeric length two-vector. A length two vector to scale vertex size.}

\item{plot.vertex.topvsize.filter}{numeric: 0-1. Set when \code{plot.vertex.label.topvsize = TRUE}, top percetage size to display the vertex labels. Default is \code{0.05}.}

\item{plot.vertex.color.highlighttopvsize}{boolean. When \code{plot.vertex.label.topvsize = TRUE}, if to make non-top vertices transparent and frameless. Default is \code{TRUE}.}

\item{plot.vertex.label.display}{boolean. If to display vertex labels. Default is \code{TRUE}.}

\item{plot.vertex.label}{string vector. Optional custom vertex label. Default is \code{NULL}, meaning V(g)$name.}

\item{plot.vertex.label.topvsize}{boolean. If to display labels with a threshold on vertex size. \code{default is TRUE}.}

\item{plot.vertex.label.size}{numeric vector. Vertex label size.}

\item{plot.vertex.label.dist}{numeric. Vertex label distance to vertex.}

\item{plot.vertex.label.loc}{radian numeric. The positioning of the vertex labels. See details.}

\item{plot.edge.type}{string. The type of edges to display in the network. Default is \code{"all"}.}

\item{plot.edge.filter}{numeric: 0-1. Percentage edges to keep. Default is \code{0.05}.}

\item{plot.edge.filter.direction}{string. Edge filter direction, top or bottom. Default is \code{"top"}.}

\item{plot.edge.weight}{numeric vector. Optional custom edge weight. Make sure it has the same length as the number of edges.}

\item{plot.edge.weight.scale}{numeric two-vector. A length two vector to scale edge weight.}

\item{plot.edge.arrow.mode}{Boolean. Edge arrow mode. Default is \code{FASLE}.}

\item{plot.edge.curved}{boolean. If to display curved edges. Default is \code{TRUE}.}

\item{plot.edge.color.highlighttopvsize}{boolean. When \code{plot.vertex.label.topvsize = TRUE}, if to make all edges transparent. Default is \code{TRUE}.}

\item{plot.height}{numeric. Plot height. Default is \code{7}.}

\item{plot.width}{numeric. Plot width. Default is \code{7}.}

\item{random_state}{integer. Random state for randomly generated network plot arrangement. Default is \code{1}.}

\item{verbose}{Whether to display messages. Default is \code{TRUE}. This will not affect error or warning messeages.}

\item{plot.title.}{string. <TBC: under construction>}

\item{plot.community_separated.dist}{Numeric. Set when \code{plot.community_separated}, distance between communities. Default is \code{3}.}

\item{plot.margins.}{numeric four-vector. Plot margins. See details.}

\item{plot.vertex.label.colour}{string vector. Vertex label colour.}
}
\value{
TBC

TBC

A \code{rbio_final_graph} object is assigned to the global environment with suffix \code{_final_graph}.
        The object contains the following items:

        \code{final_g}: an \code{igraph} object containing information on the final vertices and edges (filtered and finalized).
                        Note: this \code{igraph} object also includes a series of custom items for vertices:
                        \code{vlabel}, \code{vlabelsize}, \code{vsize}, and \code{vframecolour}.
                        Also included: \code{V(final_g)$membership} according to the input for the function.

        \code{g_layout}: the default layout as defined by the function
}
\description{
(UNDER CONSTRUCTION: NOT FUNCTIONAL) Network construction and visualization function
}
\details{
For \code{colour_scheme}, use the following as a guide (name, maximum number of colours):
           Accent	8
           Dark2	8
           Paired	12
           Pastel1	9
           Pastel2	8
           Set1	9
           Set2	8
           Set3	12
         NOTE: The maximum number of colours does not reflect the number of clusters - it is simply what \code{\link{RColorBrewer}} requires.
               The recommended approach is to set \code{initial_colour_number} to this number.

         The \code{plot.margins} follow the base R setting in \code{\link{par}} for the positioning:
         b: mar[1], l: mar[2], t: mar[3], r: mar[4]

         For \code{plot.vertex.label.topvsize.filter}, the functional will apply the filter per group if g_membership is provided.

         When \code{random_state = 0}, no random state is set.

         For \code{plot.edge.type}:

            \code{"all"}: display all the edges, i.e. both within memberships and across memberships

            \code{"across"}: display only the cross-membership edges

            \code{"within"}: display only the within membership edges

         \code{plot.community_separated} and \code{plot.ellipse} are mutually exclusive.


         For \code{plot.vertex.label.loc}, from \code{igraph}:
         It defines the position of the vertex labels, relative to the center of the vertices.
         It is interpreted as an angle in radian, zero means ‘to the right’, and ‘pi’ means to the left, up is -pi/2 and down is pi/2.
         The default value is -pi/4.

         When \code{plot.vertex.remove.zerodegree = FALSE} and \code{plot.vertex.color.highlighttopvisize = TRUE},
         zero degree vertices are made transparent. This setup is useful when members of a community (membership) are zero degree vertices.
         In such case, none of the vertices will light up.
}
\examples{

\dontrun{
TBC
}


\dontrun{
TBC
}

}
