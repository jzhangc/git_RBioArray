% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/seqDEA.R
\name{rbioseq_de_analysis}
\alias{rbioseq_de_analysis}
\title{rbioseq_de_analysis}
\usage{
rbioseq_de_analysis(
  raw.file.path,
  raw.file.ext = ".txt",
  raw.file.sep = "",
  raw.file.source = "htseq-count",
  species,
  target.annot.file,
  sample_groups.var.name = NULL,
  gtf,
  filter.threshold.min.count = 10,
  filter.threshold.min.sample = NULL,
  design,
  contra,
  alpha = 0.05,
  FC = 1.5,
  FDR = TRUE,
  export.name = "data",
  export.mode = "all",
  ...,
  parallelComputing = FALSE,
  clusterType = "FORK",
  verbose = TRUE
)
}
\arguments{
\item{raw.file.path}{Path to raw files. Default is the system working directory.}

\item{raw.file.ext}{Raw file extension. Default is \code{".txt"}.}

\item{raw.file.sep}{Raw read count file separators. Default is \code{""\"\"}, i.e. white space.}

\item{raw.file.source}{Raw file source, i.e. program used to generate read counts. Currently only supports \code{"htseq-count"}.}

\item{species}{Optional species code, following the traditional abbreviated naming convention, e.g. "hsa", "mmu".}

\item{target.annot.file}{Annotation file describing file names and targets, and should be in \code{csv} format.}

\item{sample_groups.var.name}{Sample group annotation variable name in the \code{target.annot.file}.}

\item{gtf}{Parsed gtf/gff annotation matirx. Can be obtained by function \code{\link{rbioseq_import_gtf}}.}

\item{filter.threshold.min.sample}{Minimum number of samples meeting the count threshold. Default is \code{NULL}.}

\item{design}{Design matrix.}

\item{contra}{Contrast matrix.}

\item{alpha}{Threshold for p values. Default is \code{0.05}.}

\item{FC}{Threshold for fold change. Default is \code{1.5}.}

\item{FDR}{If to use FDR correction for p values. Default is \code{TRUE}.}

\item{export.name}{Name used for output objects to the environment and directory. Not optional. Default is \code{NULL}.}

\item{export.mode}{Mode used to export results to the directory. Options are \code{"all"}, \code{"all.gene_symbol"}, \code{"sig"}. Default is \code{"all"}. See details.}

\item{...}{Additional arguments for \code{\link{sig}} function.}

\item{parallelComputing}{Whether to use parallel computing or not. Default is \code{TRUE}.}

\item{verbose}{Whether to display messages. Default is \code{TRUE}. This will not affect error or warning messeages.}

\item{filter.threshold.cpm}{Filtering threshold for counts based on CPM (counts per million). Default is \code{"none"}.}

\item{cluterType}{clusterType Only set when \code{parallelComputing = TRUE}, the type for parallel cluster. Options are \code{"PSOCK"} (all operating systems) and \code{"FORK"} (macOS and Unix-like system only). Default is \code{"PSOCK"}.}
}
\value{
Outputs the following objects:

        \code{rbioseq_count}: non small RNA RNA-seq read count object

        \code{rbioseq_de}: RNAseq DE results object

        \code{sig}: RNAseq DE significant analysis results object.

        The function also outputs \code{csv} files containing
}
\description{
All-in-one wrapper for RNAseq differential expression (DE) analysis, i.e. from read count files to volcano plots.
}
\details{
When \code{raw.file.source = "htseq-count"}, the function will cut off the last five summary raws.

         For more on the classes \code{rbioseq_count}, \code{rbioseq_de} and \code{sig}, see the help pages for functions \code{\link{rbioseq_import_count}}, \code{\link{rnaseq_de}} and \code{\link{sig}}, respectively.

         The function is not suitable for small RNA RNAseq analysis, e.g. miRNA analysis. For miRNA analysis,
         it is advised to use \code{RBioMIR} pacakge in conjunction with functions \code{\link{rnaseq_de}} and \code{\link{sig}} from the current pacakge.
}
\examples{
\dontrun{
mrna_count <- rbioseq_import_count(path = "~/dataset/",
                                   species = "hsa",
                                   target.annot.file = "target.csv", sample_groups.var.name = "condition",
                                   gtf.matrix = gtf,
                                   raw.file.ext = ".out", raw.file.sep = "",
                                   raw.file.source = "htseq-count",
                                   parallelComputing = TRUE, clusterType = "FORK")
}
}
