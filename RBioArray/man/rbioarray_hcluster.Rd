% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plots.R
\name{rbioarray_hcluster}
\alias{rbioarray_hcluster}
\title{rbioarray_hcluster}
\usage{
rbioarray_hcluster(plotName = "data", normlist, n = "all", fct,
  colGroup = ifelse(length(levels(fct)) < 19, length(levels(fct)), 19),
  distance = "euclidean", clust = "complete", colColour = "Paired",
  mapColour = "PRGn", n_mapColour = 11, ..., plotWidth = 7,
  plotHeight = 7)
}
\arguments{
\item{plotName}{File name for the export \code{pdf} plot file. Default is \code{"data"}.}

\item{normlist}{Input normalized data, either a list, \code{EList} or \code{MAList} object.}

\item{n}{Number of genes to be clustered, numeric input or \code{"all"}. Default is \code{"all"}.}

\item{fct}{Input \code{factor} object for samples.}

\item{colGroup}{Colour group, numeric or dependent on \code{fct}.}

\item{distance}{Distance calculation method. Default is \code{"euclidean"}. See \code{\link{dist}} for more.}

\item{clust}{Clustering method. Default is \code{"complete"}. See \code{\link{hclust}} for more.}

\item{colColour}{Column group colour. Default is \code{"Paired"}. See \code{RColorBrewer} package for more.}

\item{mapColour}{Heat map colour. Default is \code{"PRGn"}. See \code{RColorBrewer} package for more.}

\item{n_mapColour}{Number of colours displayed. Default is \code{11}. See \code{RColorBrewer} package for more.}

\item{...}{Additional arguments for \code{heatmap.2} function from \code{gplots} package.}

\item{plotWidth}{Width of the plot. Unit is \code{inch}. Default is \code{7}.}

\item{plotHeight}{Height of the plot. Unit is \code{inch}. Default is \code{7}.}
}
\value{
A heatmap based on hierarchical clustering analysis in \code{pdf} format.
}
\description{
Wrapper for hierarchical clustering analysis and heatmap visualization.
}
\examples{
\dontrun{
rbioarray_hcluster(normlist = normdata, n = 500, fct = conSum, trace = "none", srtCol = 45, offsetCol = 0, adjCol = c(1, 0), labRow = FALSE, key.title = "", keysize = 1.5, key.xlab = "Normalized expression value", key.ylab = "Probe count")
}
}

