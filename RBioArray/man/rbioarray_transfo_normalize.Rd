% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/arrayDEA.R
\name{rbioarray_transfo_normalize}
\alias{rbioarray_transfo_normalize}
\title{rbioarray_transfo_normalize}
\usage{
rbioarray_transfo_normalize(object, ...)
}
\arguments{
\item{object}{Input obejct with raw data and annotation information. Should be a \code{rbioarray_rlist} class.}

\item{...}{Additional arguments for corresponding S3 class methods.}
}
\value{
A \code{rbioarray_plist} class object with the following items:

        \code{E}: Processed expression matrix

        \code{design}: Microrray experiment sample design matrix

        \code{ArrayWeight}

        \code{extra_E_data}: A list with original (i.e. raw) expression matrix and, if applicable, log transformed expression matrix

        Additionally, \code{rbioarray_plist} object will include additional items from the input \code{rbioarray_rlist} object.
}
\description{
Generic data log transformation and nomalization function for microarray.
}
\details{
The \code{rbioarray_rlist} object can be obtained from \code{\link{rbioarray_rlist}} function.#'

         When the \code{rbioarray_rlist} object generated from \code{EListRaw} as the input, make sure not to perform log transformation (i.e. set \code{logTransfo = FALSE}),
         as the \code{EListRaw} object has already been transformed.
}
\examples{

\dontrun{
# for \\code{rbioarray_rlist} object:
microarray_plist <- rbioarray_transfo_normalize(object = microarray_rlist, logTransfo = TRUE, logTransfo.method = "log2",
                                                logTransfo.parallelComputing = TRUE, logTransfo.cluterType = "FORK",
                                                bgc.method = "auto", between.sample.norm.method = "quantile")
}

}
